                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW32)
                                      4 ; This file was generated Sun Feb 22 20:13:13 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module lab1_2
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _rand
                                     14 	.globl _putchar
                                     15 	.globl _printf
                                     16 	.globl _Sys_Init
                                     17 	.globl _UART0_Init
                                     18 	.globl _SYSCLK_Init
                                     19 	.globl _SS
                                     20 	.globl _PB2
                                     21 	.globl _PB1
                                     22 	.globl _Buzzer
                                     23 	.globl _BILED1
                                     24 	.globl _BILED0
                                     25 	.globl _LED0
                                     26 	.globl _LED1
                                     27 	.globl _SPIF
                                     28 	.globl _WCOL
                                     29 	.globl _MODF
                                     30 	.globl _RXOVRN
                                     31 	.globl _TXBSY
                                     32 	.globl _SLVSEL
                                     33 	.globl _MSTEN
                                     34 	.globl _SPIEN
                                     35 	.globl _AD0EN
                                     36 	.globl _ADCEN
                                     37 	.globl _AD0TM
                                     38 	.globl _ADCTM
                                     39 	.globl _AD0INT
                                     40 	.globl _ADCINT
                                     41 	.globl _AD0BUSY
                                     42 	.globl _ADBUSY
                                     43 	.globl _AD0CM1
                                     44 	.globl _ADSTM1
                                     45 	.globl _AD0CM0
                                     46 	.globl _ADSTM0
                                     47 	.globl _AD0WINT
                                     48 	.globl _ADWINT
                                     49 	.globl _AD0LJST
                                     50 	.globl _ADLJST
                                     51 	.globl _CF
                                     52 	.globl _CR
                                     53 	.globl _CCF4
                                     54 	.globl _CCF3
                                     55 	.globl _CCF2
                                     56 	.globl _CCF1
                                     57 	.globl _CCF0
                                     58 	.globl _CY
                                     59 	.globl _AC
                                     60 	.globl _F0
                                     61 	.globl _RS1
                                     62 	.globl _RS0
                                     63 	.globl _OV
                                     64 	.globl _F1
                                     65 	.globl _P
                                     66 	.globl _TF2
                                     67 	.globl _EXF2
                                     68 	.globl _RCLK
                                     69 	.globl _TCLK
                                     70 	.globl _EXEN2
                                     71 	.globl _TR2
                                     72 	.globl _CT2
                                     73 	.globl _CPRL2
                                     74 	.globl _BUSY
                                     75 	.globl _ENSMB
                                     76 	.globl _STA
                                     77 	.globl _STO
                                     78 	.globl _SI
                                     79 	.globl _AA
                                     80 	.globl _SMBFTE
                                     81 	.globl _SMBTOE
                                     82 	.globl _PT2
                                     83 	.globl _PS
                                     84 	.globl _PS0
                                     85 	.globl _PT1
                                     86 	.globl _PX1
                                     87 	.globl _PT0
                                     88 	.globl _PX0
                                     89 	.globl _P3_7
                                     90 	.globl _P3_6
                                     91 	.globl _P3_5
                                     92 	.globl _P3_4
                                     93 	.globl _P3_3
                                     94 	.globl _P3_2
                                     95 	.globl _P3_1
                                     96 	.globl _P3_0
                                     97 	.globl _EA
                                     98 	.globl _ET2
                                     99 	.globl _ES
                                    100 	.globl _ES0
                                    101 	.globl _ET1
                                    102 	.globl _EX1
                                    103 	.globl _ET0
                                    104 	.globl _EX0
                                    105 	.globl _P2_7
                                    106 	.globl _P2_6
                                    107 	.globl _P2_5
                                    108 	.globl _P2_4
                                    109 	.globl _P2_3
                                    110 	.globl _P2_2
                                    111 	.globl _P2_1
                                    112 	.globl _P2_0
                                    113 	.globl _S0MODE
                                    114 	.globl _SM00
                                    115 	.globl _SM0
                                    116 	.globl _SM10
                                    117 	.globl _SM1
                                    118 	.globl _MCE0
                                    119 	.globl _SM20
                                    120 	.globl _SM2
                                    121 	.globl _REN0
                                    122 	.globl _REN
                                    123 	.globl _TB80
                                    124 	.globl _TB8
                                    125 	.globl _RB80
                                    126 	.globl _RB8
                                    127 	.globl _TI0
                                    128 	.globl _TI
                                    129 	.globl _RI0
                                    130 	.globl _RI
                                    131 	.globl _P1_7
                                    132 	.globl _P1_6
                                    133 	.globl _P1_5
                                    134 	.globl _P1_4
                                    135 	.globl _P1_3
                                    136 	.globl _P1_2
                                    137 	.globl _P1_1
                                    138 	.globl _P1_0
                                    139 	.globl _TF1
                                    140 	.globl _TR1
                                    141 	.globl _TF0
                                    142 	.globl _TR0
                                    143 	.globl _IE1
                                    144 	.globl _IT1
                                    145 	.globl _IE0
                                    146 	.globl _IT0
                                    147 	.globl _P0_7
                                    148 	.globl _P0_6
                                    149 	.globl _P0_5
                                    150 	.globl _P0_4
                                    151 	.globl _P0_3
                                    152 	.globl _P0_2
                                    153 	.globl _P0_1
                                    154 	.globl _P0_0
                                    155 	.globl _PCA0CP4
                                    156 	.globl _PCA0CP3
                                    157 	.globl _PCA0CP2
                                    158 	.globl _PCA0CP1
                                    159 	.globl _PCA0CP0
                                    160 	.globl _PCA0
                                    161 	.globl _DAC1
                                    162 	.globl _DAC0
                                    163 	.globl _ADC0LT
                                    164 	.globl _ADC0GT
                                    165 	.globl _ADC0
                                    166 	.globl _RCAP4
                                    167 	.globl _TMR4
                                    168 	.globl _TMR3RL
                                    169 	.globl _TMR3
                                    170 	.globl _RCAP2
                                    171 	.globl _TMR2
                                    172 	.globl _TMR1
                                    173 	.globl _TMR0
                                    174 	.globl _WDTCN
                                    175 	.globl _PCA0CPH4
                                    176 	.globl _PCA0CPH3
                                    177 	.globl _PCA0CPH2
                                    178 	.globl _PCA0CPH1
                                    179 	.globl _PCA0CPH0
                                    180 	.globl _PCA0H
                                    181 	.globl _SPI0CN
                                    182 	.globl _EIP2
                                    183 	.globl _EIP1
                                    184 	.globl _TH4
                                    185 	.globl _TL4
                                    186 	.globl _SADDR1
                                    187 	.globl _SBUF1
                                    188 	.globl _SCON1
                                    189 	.globl _B
                                    190 	.globl _RSTSRC
                                    191 	.globl _PCA0CPL4
                                    192 	.globl _PCA0CPL3
                                    193 	.globl _PCA0CPL2
                                    194 	.globl _PCA0CPL1
                                    195 	.globl _PCA0CPL0
                                    196 	.globl _PCA0L
                                    197 	.globl _ADC0CN
                                    198 	.globl _EIE2
                                    199 	.globl _EIE1
                                    200 	.globl _RCAP4H
                                    201 	.globl _RCAP4L
                                    202 	.globl _XBR2
                                    203 	.globl _XBR1
                                    204 	.globl _XBR0
                                    205 	.globl _ACC
                                    206 	.globl _PCA0CPM4
                                    207 	.globl _PCA0CPM3
                                    208 	.globl _PCA0CPM2
                                    209 	.globl _PCA0CPM1
                                    210 	.globl _PCA0CPM0
                                    211 	.globl _PCA0MD
                                    212 	.globl _PCA0CN
                                    213 	.globl _DAC1CN
                                    214 	.globl _DAC1H
                                    215 	.globl _DAC1L
                                    216 	.globl _DAC0CN
                                    217 	.globl _DAC0H
                                    218 	.globl _DAC0L
                                    219 	.globl _REF0CN
                                    220 	.globl _PSW
                                    221 	.globl _SMB0CR
                                    222 	.globl _TH2
                                    223 	.globl _TL2
                                    224 	.globl _RCAP2H
                                    225 	.globl _RCAP2L
                                    226 	.globl _T4CON
                                    227 	.globl _T2CON
                                    228 	.globl _ADC0LTH
                                    229 	.globl _ADC0LTL
                                    230 	.globl _ADC0GTH
                                    231 	.globl _ADC0GTL
                                    232 	.globl _SMB0ADR
                                    233 	.globl _SMB0DAT
                                    234 	.globl _SMB0STA
                                    235 	.globl _SMB0CN
                                    236 	.globl _ADC0H
                                    237 	.globl _ADC0L
                                    238 	.globl _P1MDIN
                                    239 	.globl _ADC0CF
                                    240 	.globl _AMX0SL
                                    241 	.globl _AMX0CF
                                    242 	.globl _SADEN0
                                    243 	.globl _IP
                                    244 	.globl _FLACL
                                    245 	.globl _FLSCL
                                    246 	.globl _P74OUT
                                    247 	.globl _OSCICN
                                    248 	.globl _OSCXCN
                                    249 	.globl _P3
                                    250 	.globl __XPAGE
                                    251 	.globl _EMI0CN
                                    252 	.globl _SADEN1
                                    253 	.globl _P3IF
                                    254 	.globl _AMX1SL
                                    255 	.globl _ADC1CF
                                    256 	.globl _ADC1CN
                                    257 	.globl _SADDR0
                                    258 	.globl _IE
                                    259 	.globl _P3MDOUT
                                    260 	.globl _PRT3CF
                                    261 	.globl _P2MDOUT
                                    262 	.globl _PRT2CF
                                    263 	.globl _P1MDOUT
                                    264 	.globl _PRT1CF
                                    265 	.globl _P0MDOUT
                                    266 	.globl _PRT0CF
                                    267 	.globl _EMI0CF
                                    268 	.globl _EMI0TC
                                    269 	.globl _P2
                                    270 	.globl _CPT1CN
                                    271 	.globl _CPT0CN
                                    272 	.globl _SPI0CKR
                                    273 	.globl _ADC1
                                    274 	.globl _SPI0DAT
                                    275 	.globl _SPI0CFG
                                    276 	.globl _SBUF0
                                    277 	.globl _SBUF
                                    278 	.globl _SCON0
                                    279 	.globl _SCON
                                    280 	.globl _P7
                                    281 	.globl _TMR3H
                                    282 	.globl _TMR3L
                                    283 	.globl _TMR3RLH
                                    284 	.globl _TMR3RLL
                                    285 	.globl _TMR3CN
                                    286 	.globl _P1
                                    287 	.globl _PSCTL
                                    288 	.globl _CKCON
                                    289 	.globl _TH1
                                    290 	.globl _TH0
                                    291 	.globl _TL1
                                    292 	.globl _TL0
                                    293 	.globl _TMOD
                                    294 	.globl _TCON
                                    295 	.globl _PCON
                                    296 	.globl _P6
                                    297 	.globl _P5
                                    298 	.globl _P4
                                    299 	.globl _DPH
                                    300 	.globl _DPL
                                    301 	.globl _SP
                                    302 	.globl _P0
                                    303 	.globl _Seconds
                                    304 	.globl _Counts
                                    305 	.globl _Port_Init
                                    306 	.globl _Interrupt_Init
                                    307 	.globl _Timer_Init
                                    308 	.globl _Timer0_ISR
                                    309 	.globl _random
                                    310 	.globl _Button1
                                    311 	.globl _Button2
                                    312 	.globl _Switch
                                    313 ;--------------------------------------------------------
                                    314 ; special function registers
                                    315 ;--------------------------------------------------------
                                    316 	.area RSEG    (ABS,DATA)
      000000                        317 	.org 0x0000
                           000080   318 G$P0$0$0 == 0x0080
                           000080   319 _P0	=	0x0080
                           000081   320 G$SP$0$0 == 0x0081
                           000081   321 _SP	=	0x0081
                           000082   322 G$DPL$0$0 == 0x0082
                           000082   323 _DPL	=	0x0082
                           000083   324 G$DPH$0$0 == 0x0083
                           000083   325 _DPH	=	0x0083
                           000084   326 G$P4$0$0 == 0x0084
                           000084   327 _P4	=	0x0084
                           000085   328 G$P5$0$0 == 0x0085
                           000085   329 _P5	=	0x0085
                           000086   330 G$P6$0$0 == 0x0086
                           000086   331 _P6	=	0x0086
                           000087   332 G$PCON$0$0 == 0x0087
                           000087   333 _PCON	=	0x0087
                           000088   334 G$TCON$0$0 == 0x0088
                           000088   335 _TCON	=	0x0088
                           000089   336 G$TMOD$0$0 == 0x0089
                           000089   337 _TMOD	=	0x0089
                           00008A   338 G$TL0$0$0 == 0x008a
                           00008A   339 _TL0	=	0x008a
                           00008B   340 G$TL1$0$0 == 0x008b
                           00008B   341 _TL1	=	0x008b
                           00008C   342 G$TH0$0$0 == 0x008c
                           00008C   343 _TH0	=	0x008c
                           00008D   344 G$TH1$0$0 == 0x008d
                           00008D   345 _TH1	=	0x008d
                           00008E   346 G$CKCON$0$0 == 0x008e
                           00008E   347 _CKCON	=	0x008e
                           00008F   348 G$PSCTL$0$0 == 0x008f
                           00008F   349 _PSCTL	=	0x008f
                           000090   350 G$P1$0$0 == 0x0090
                           000090   351 _P1	=	0x0090
                           000091   352 G$TMR3CN$0$0 == 0x0091
                           000091   353 _TMR3CN	=	0x0091
                           000092   354 G$TMR3RLL$0$0 == 0x0092
                           000092   355 _TMR3RLL	=	0x0092
                           000093   356 G$TMR3RLH$0$0 == 0x0093
                           000093   357 _TMR3RLH	=	0x0093
                           000094   358 G$TMR3L$0$0 == 0x0094
                           000094   359 _TMR3L	=	0x0094
                           000095   360 G$TMR3H$0$0 == 0x0095
                           000095   361 _TMR3H	=	0x0095
                           000096   362 G$P7$0$0 == 0x0096
                           000096   363 _P7	=	0x0096
                           000098   364 G$SCON$0$0 == 0x0098
                           000098   365 _SCON	=	0x0098
                           000098   366 G$SCON0$0$0 == 0x0098
                           000098   367 _SCON0	=	0x0098
                           000099   368 G$SBUF$0$0 == 0x0099
                           000099   369 _SBUF	=	0x0099
                           000099   370 G$SBUF0$0$0 == 0x0099
                           000099   371 _SBUF0	=	0x0099
                           00009A   372 G$SPI0CFG$0$0 == 0x009a
                           00009A   373 _SPI0CFG	=	0x009a
                           00009B   374 G$SPI0DAT$0$0 == 0x009b
                           00009B   375 _SPI0DAT	=	0x009b
                           00009C   376 G$ADC1$0$0 == 0x009c
                           00009C   377 _ADC1	=	0x009c
                           00009D   378 G$SPI0CKR$0$0 == 0x009d
                           00009D   379 _SPI0CKR	=	0x009d
                           00009E   380 G$CPT0CN$0$0 == 0x009e
                           00009E   381 _CPT0CN	=	0x009e
                           00009F   382 G$CPT1CN$0$0 == 0x009f
                           00009F   383 _CPT1CN	=	0x009f
                           0000A0   384 G$P2$0$0 == 0x00a0
                           0000A0   385 _P2	=	0x00a0
                           0000A1   386 G$EMI0TC$0$0 == 0x00a1
                           0000A1   387 _EMI0TC	=	0x00a1
                           0000A3   388 G$EMI0CF$0$0 == 0x00a3
                           0000A3   389 _EMI0CF	=	0x00a3
                           0000A4   390 G$PRT0CF$0$0 == 0x00a4
                           0000A4   391 _PRT0CF	=	0x00a4
                           0000A4   392 G$P0MDOUT$0$0 == 0x00a4
                           0000A4   393 _P0MDOUT	=	0x00a4
                           0000A5   394 G$PRT1CF$0$0 == 0x00a5
                           0000A5   395 _PRT1CF	=	0x00a5
                           0000A5   396 G$P1MDOUT$0$0 == 0x00a5
                           0000A5   397 _P1MDOUT	=	0x00a5
                           0000A6   398 G$PRT2CF$0$0 == 0x00a6
                           0000A6   399 _PRT2CF	=	0x00a6
                           0000A6   400 G$P2MDOUT$0$0 == 0x00a6
                           0000A6   401 _P2MDOUT	=	0x00a6
                           0000A7   402 G$PRT3CF$0$0 == 0x00a7
                           0000A7   403 _PRT3CF	=	0x00a7
                           0000A7   404 G$P3MDOUT$0$0 == 0x00a7
                           0000A7   405 _P3MDOUT	=	0x00a7
                           0000A8   406 G$IE$0$0 == 0x00a8
                           0000A8   407 _IE	=	0x00a8
                           0000A9   408 G$SADDR0$0$0 == 0x00a9
                           0000A9   409 _SADDR0	=	0x00a9
                           0000AA   410 G$ADC1CN$0$0 == 0x00aa
                           0000AA   411 _ADC1CN	=	0x00aa
                           0000AB   412 G$ADC1CF$0$0 == 0x00ab
                           0000AB   413 _ADC1CF	=	0x00ab
                           0000AC   414 G$AMX1SL$0$0 == 0x00ac
                           0000AC   415 _AMX1SL	=	0x00ac
                           0000AD   416 G$P3IF$0$0 == 0x00ad
                           0000AD   417 _P3IF	=	0x00ad
                           0000AE   418 G$SADEN1$0$0 == 0x00ae
                           0000AE   419 _SADEN1	=	0x00ae
                           0000AF   420 G$EMI0CN$0$0 == 0x00af
                           0000AF   421 _EMI0CN	=	0x00af
                           0000AF   422 G$_XPAGE$0$0 == 0x00af
                           0000AF   423 __XPAGE	=	0x00af
                           0000B0   424 G$P3$0$0 == 0x00b0
                           0000B0   425 _P3	=	0x00b0
                           0000B1   426 G$OSCXCN$0$0 == 0x00b1
                           0000B1   427 _OSCXCN	=	0x00b1
                           0000B2   428 G$OSCICN$0$0 == 0x00b2
                           0000B2   429 _OSCICN	=	0x00b2
                           0000B5   430 G$P74OUT$0$0 == 0x00b5
                           0000B5   431 _P74OUT	=	0x00b5
                           0000B6   432 G$FLSCL$0$0 == 0x00b6
                           0000B6   433 _FLSCL	=	0x00b6
                           0000B7   434 G$FLACL$0$0 == 0x00b7
                           0000B7   435 _FLACL	=	0x00b7
                           0000B8   436 G$IP$0$0 == 0x00b8
                           0000B8   437 _IP	=	0x00b8
                           0000B9   438 G$SADEN0$0$0 == 0x00b9
                           0000B9   439 _SADEN0	=	0x00b9
                           0000BA   440 G$AMX0CF$0$0 == 0x00ba
                           0000BA   441 _AMX0CF	=	0x00ba
                           0000BB   442 G$AMX0SL$0$0 == 0x00bb
                           0000BB   443 _AMX0SL	=	0x00bb
                           0000BC   444 G$ADC0CF$0$0 == 0x00bc
                           0000BC   445 _ADC0CF	=	0x00bc
                           0000BD   446 G$P1MDIN$0$0 == 0x00bd
                           0000BD   447 _P1MDIN	=	0x00bd
                           0000BE   448 G$ADC0L$0$0 == 0x00be
                           0000BE   449 _ADC0L	=	0x00be
                           0000BF   450 G$ADC0H$0$0 == 0x00bf
                           0000BF   451 _ADC0H	=	0x00bf
                           0000C0   452 G$SMB0CN$0$0 == 0x00c0
                           0000C0   453 _SMB0CN	=	0x00c0
                           0000C1   454 G$SMB0STA$0$0 == 0x00c1
                           0000C1   455 _SMB0STA	=	0x00c1
                           0000C2   456 G$SMB0DAT$0$0 == 0x00c2
                           0000C2   457 _SMB0DAT	=	0x00c2
                           0000C3   458 G$SMB0ADR$0$0 == 0x00c3
                           0000C3   459 _SMB0ADR	=	0x00c3
                           0000C4   460 G$ADC0GTL$0$0 == 0x00c4
                           0000C4   461 _ADC0GTL	=	0x00c4
                           0000C5   462 G$ADC0GTH$0$0 == 0x00c5
                           0000C5   463 _ADC0GTH	=	0x00c5
                           0000C6   464 G$ADC0LTL$0$0 == 0x00c6
                           0000C6   465 _ADC0LTL	=	0x00c6
                           0000C7   466 G$ADC0LTH$0$0 == 0x00c7
                           0000C7   467 _ADC0LTH	=	0x00c7
                           0000C8   468 G$T2CON$0$0 == 0x00c8
                           0000C8   469 _T2CON	=	0x00c8
                           0000C9   470 G$T4CON$0$0 == 0x00c9
                           0000C9   471 _T4CON	=	0x00c9
                           0000CA   472 G$RCAP2L$0$0 == 0x00ca
                           0000CA   473 _RCAP2L	=	0x00ca
                           0000CB   474 G$RCAP2H$0$0 == 0x00cb
                           0000CB   475 _RCAP2H	=	0x00cb
                           0000CC   476 G$TL2$0$0 == 0x00cc
                           0000CC   477 _TL2	=	0x00cc
                           0000CD   478 G$TH2$0$0 == 0x00cd
                           0000CD   479 _TH2	=	0x00cd
                           0000CF   480 G$SMB0CR$0$0 == 0x00cf
                           0000CF   481 _SMB0CR	=	0x00cf
                           0000D0   482 G$PSW$0$0 == 0x00d0
                           0000D0   483 _PSW	=	0x00d0
                           0000D1   484 G$REF0CN$0$0 == 0x00d1
                           0000D1   485 _REF0CN	=	0x00d1
                           0000D2   486 G$DAC0L$0$0 == 0x00d2
                           0000D2   487 _DAC0L	=	0x00d2
                           0000D3   488 G$DAC0H$0$0 == 0x00d3
                           0000D3   489 _DAC0H	=	0x00d3
                           0000D4   490 G$DAC0CN$0$0 == 0x00d4
                           0000D4   491 _DAC0CN	=	0x00d4
                           0000D5   492 G$DAC1L$0$0 == 0x00d5
                           0000D5   493 _DAC1L	=	0x00d5
                           0000D6   494 G$DAC1H$0$0 == 0x00d6
                           0000D6   495 _DAC1H	=	0x00d6
                           0000D7   496 G$DAC1CN$0$0 == 0x00d7
                           0000D7   497 _DAC1CN	=	0x00d7
                           0000D8   498 G$PCA0CN$0$0 == 0x00d8
                           0000D8   499 _PCA0CN	=	0x00d8
                           0000D9   500 G$PCA0MD$0$0 == 0x00d9
                           0000D9   501 _PCA0MD	=	0x00d9
                           0000DA   502 G$PCA0CPM0$0$0 == 0x00da
                           0000DA   503 _PCA0CPM0	=	0x00da
                           0000DB   504 G$PCA0CPM1$0$0 == 0x00db
                           0000DB   505 _PCA0CPM1	=	0x00db
                           0000DC   506 G$PCA0CPM2$0$0 == 0x00dc
                           0000DC   507 _PCA0CPM2	=	0x00dc
                           0000DD   508 G$PCA0CPM3$0$0 == 0x00dd
                           0000DD   509 _PCA0CPM3	=	0x00dd
                           0000DE   510 G$PCA0CPM4$0$0 == 0x00de
                           0000DE   511 _PCA0CPM4	=	0x00de
                           0000E0   512 G$ACC$0$0 == 0x00e0
                           0000E0   513 _ACC	=	0x00e0
                           0000E1   514 G$XBR0$0$0 == 0x00e1
                           0000E1   515 _XBR0	=	0x00e1
                           0000E2   516 G$XBR1$0$0 == 0x00e2
                           0000E2   517 _XBR1	=	0x00e2
                           0000E3   518 G$XBR2$0$0 == 0x00e3
                           0000E3   519 _XBR2	=	0x00e3
                           0000E4   520 G$RCAP4L$0$0 == 0x00e4
                           0000E4   521 _RCAP4L	=	0x00e4
                           0000E5   522 G$RCAP4H$0$0 == 0x00e5
                           0000E5   523 _RCAP4H	=	0x00e5
                           0000E6   524 G$EIE1$0$0 == 0x00e6
                           0000E6   525 _EIE1	=	0x00e6
                           0000E7   526 G$EIE2$0$0 == 0x00e7
                           0000E7   527 _EIE2	=	0x00e7
                           0000E8   528 G$ADC0CN$0$0 == 0x00e8
                           0000E8   529 _ADC0CN	=	0x00e8
                           0000E9   530 G$PCA0L$0$0 == 0x00e9
                           0000E9   531 _PCA0L	=	0x00e9
                           0000EA   532 G$PCA0CPL0$0$0 == 0x00ea
                           0000EA   533 _PCA0CPL0	=	0x00ea
                           0000EB   534 G$PCA0CPL1$0$0 == 0x00eb
                           0000EB   535 _PCA0CPL1	=	0x00eb
                           0000EC   536 G$PCA0CPL2$0$0 == 0x00ec
                           0000EC   537 _PCA0CPL2	=	0x00ec
                           0000ED   538 G$PCA0CPL3$0$0 == 0x00ed
                           0000ED   539 _PCA0CPL3	=	0x00ed
                           0000EE   540 G$PCA0CPL4$0$0 == 0x00ee
                           0000EE   541 _PCA0CPL4	=	0x00ee
                           0000EF   542 G$RSTSRC$0$0 == 0x00ef
                           0000EF   543 _RSTSRC	=	0x00ef
                           0000F0   544 G$B$0$0 == 0x00f0
                           0000F0   545 _B	=	0x00f0
                           0000F1   546 G$SCON1$0$0 == 0x00f1
                           0000F1   547 _SCON1	=	0x00f1
                           0000F2   548 G$SBUF1$0$0 == 0x00f2
                           0000F2   549 _SBUF1	=	0x00f2
                           0000F3   550 G$SADDR1$0$0 == 0x00f3
                           0000F3   551 _SADDR1	=	0x00f3
                           0000F4   552 G$TL4$0$0 == 0x00f4
                           0000F4   553 _TL4	=	0x00f4
                           0000F5   554 G$TH4$0$0 == 0x00f5
                           0000F5   555 _TH4	=	0x00f5
                           0000F6   556 G$EIP1$0$0 == 0x00f6
                           0000F6   557 _EIP1	=	0x00f6
                           0000F7   558 G$EIP2$0$0 == 0x00f7
                           0000F7   559 _EIP2	=	0x00f7
                           0000F8   560 G$SPI0CN$0$0 == 0x00f8
                           0000F8   561 _SPI0CN	=	0x00f8
                           0000F9   562 G$PCA0H$0$0 == 0x00f9
                           0000F9   563 _PCA0H	=	0x00f9
                           0000FA   564 G$PCA0CPH0$0$0 == 0x00fa
                           0000FA   565 _PCA0CPH0	=	0x00fa
                           0000FB   566 G$PCA0CPH1$0$0 == 0x00fb
                           0000FB   567 _PCA0CPH1	=	0x00fb
                           0000FC   568 G$PCA0CPH2$0$0 == 0x00fc
                           0000FC   569 _PCA0CPH2	=	0x00fc
                           0000FD   570 G$PCA0CPH3$0$0 == 0x00fd
                           0000FD   571 _PCA0CPH3	=	0x00fd
                           0000FE   572 G$PCA0CPH4$0$0 == 0x00fe
                           0000FE   573 _PCA0CPH4	=	0x00fe
                           0000FF   574 G$WDTCN$0$0 == 0x00ff
                           0000FF   575 _WDTCN	=	0x00ff
                           008C8A   576 G$TMR0$0$0 == 0x8c8a
                           008C8A   577 _TMR0	=	0x8c8a
                           008D8B   578 G$TMR1$0$0 == 0x8d8b
                           008D8B   579 _TMR1	=	0x8d8b
                           00CDCC   580 G$TMR2$0$0 == 0xcdcc
                           00CDCC   581 _TMR2	=	0xcdcc
                           00CBCA   582 G$RCAP2$0$0 == 0xcbca
                           00CBCA   583 _RCAP2	=	0xcbca
                           009594   584 G$TMR3$0$0 == 0x9594
                           009594   585 _TMR3	=	0x9594
                           009392   586 G$TMR3RL$0$0 == 0x9392
                           009392   587 _TMR3RL	=	0x9392
                           00F5F4   588 G$TMR4$0$0 == 0xf5f4
                           00F5F4   589 _TMR4	=	0xf5f4
                           00E5E4   590 G$RCAP4$0$0 == 0xe5e4
                           00E5E4   591 _RCAP4	=	0xe5e4
                           00BFBE   592 G$ADC0$0$0 == 0xbfbe
                           00BFBE   593 _ADC0	=	0xbfbe
                           00C5C4   594 G$ADC0GT$0$0 == 0xc5c4
                           00C5C4   595 _ADC0GT	=	0xc5c4
                           00C7C6   596 G$ADC0LT$0$0 == 0xc7c6
                           00C7C6   597 _ADC0LT	=	0xc7c6
                           00D3D2   598 G$DAC0$0$0 == 0xd3d2
                           00D3D2   599 _DAC0	=	0xd3d2
                           00D6D5   600 G$DAC1$0$0 == 0xd6d5
                           00D6D5   601 _DAC1	=	0xd6d5
                           00F9E9   602 G$PCA0$0$0 == 0xf9e9
                           00F9E9   603 _PCA0	=	0xf9e9
                           00FAEA   604 G$PCA0CP0$0$0 == 0xfaea
                           00FAEA   605 _PCA0CP0	=	0xfaea
                           00FBEB   606 G$PCA0CP1$0$0 == 0xfbeb
                           00FBEB   607 _PCA0CP1	=	0xfbeb
                           00FCEC   608 G$PCA0CP2$0$0 == 0xfcec
                           00FCEC   609 _PCA0CP2	=	0xfcec
                           00FDED   610 G$PCA0CP3$0$0 == 0xfded
                           00FDED   611 _PCA0CP3	=	0xfded
                           00FEEE   612 G$PCA0CP4$0$0 == 0xfeee
                           00FEEE   613 _PCA0CP4	=	0xfeee
                                    614 ;--------------------------------------------------------
                                    615 ; special function bits
                                    616 ;--------------------------------------------------------
                                    617 	.area RSEG    (ABS,DATA)
      000000                        618 	.org 0x0000
                           000080   619 G$P0_0$0$0 == 0x0080
                           000080   620 _P0_0	=	0x0080
                           000081   621 G$P0_1$0$0 == 0x0081
                           000081   622 _P0_1	=	0x0081
                           000082   623 G$P0_2$0$0 == 0x0082
                           000082   624 _P0_2	=	0x0082
                           000083   625 G$P0_3$0$0 == 0x0083
                           000083   626 _P0_3	=	0x0083
                           000084   627 G$P0_4$0$0 == 0x0084
                           000084   628 _P0_4	=	0x0084
                           000085   629 G$P0_5$0$0 == 0x0085
                           000085   630 _P0_5	=	0x0085
                           000086   631 G$P0_6$0$0 == 0x0086
                           000086   632 _P0_6	=	0x0086
                           000087   633 G$P0_7$0$0 == 0x0087
                           000087   634 _P0_7	=	0x0087
                           000088   635 G$IT0$0$0 == 0x0088
                           000088   636 _IT0	=	0x0088
                           000089   637 G$IE0$0$0 == 0x0089
                           000089   638 _IE0	=	0x0089
                           00008A   639 G$IT1$0$0 == 0x008a
                           00008A   640 _IT1	=	0x008a
                           00008B   641 G$IE1$0$0 == 0x008b
                           00008B   642 _IE1	=	0x008b
                           00008C   643 G$TR0$0$0 == 0x008c
                           00008C   644 _TR0	=	0x008c
                           00008D   645 G$TF0$0$0 == 0x008d
                           00008D   646 _TF0	=	0x008d
                           00008E   647 G$TR1$0$0 == 0x008e
                           00008E   648 _TR1	=	0x008e
                           00008F   649 G$TF1$0$0 == 0x008f
                           00008F   650 _TF1	=	0x008f
                           000090   651 G$P1_0$0$0 == 0x0090
                           000090   652 _P1_0	=	0x0090
                           000091   653 G$P1_1$0$0 == 0x0091
                           000091   654 _P1_1	=	0x0091
                           000092   655 G$P1_2$0$0 == 0x0092
                           000092   656 _P1_2	=	0x0092
                           000093   657 G$P1_3$0$0 == 0x0093
                           000093   658 _P1_3	=	0x0093
                           000094   659 G$P1_4$0$0 == 0x0094
                           000094   660 _P1_4	=	0x0094
                           000095   661 G$P1_5$0$0 == 0x0095
                           000095   662 _P1_5	=	0x0095
                           000096   663 G$P1_6$0$0 == 0x0096
                           000096   664 _P1_6	=	0x0096
                           000097   665 G$P1_7$0$0 == 0x0097
                           000097   666 _P1_7	=	0x0097
                           000098   667 G$RI$0$0 == 0x0098
                           000098   668 _RI	=	0x0098
                           000098   669 G$RI0$0$0 == 0x0098
                           000098   670 _RI0	=	0x0098
                           000099   671 G$TI$0$0 == 0x0099
                           000099   672 _TI	=	0x0099
                           000099   673 G$TI0$0$0 == 0x0099
                           000099   674 _TI0	=	0x0099
                           00009A   675 G$RB8$0$0 == 0x009a
                           00009A   676 _RB8	=	0x009a
                           00009A   677 G$RB80$0$0 == 0x009a
                           00009A   678 _RB80	=	0x009a
                           00009B   679 G$TB8$0$0 == 0x009b
                           00009B   680 _TB8	=	0x009b
                           00009B   681 G$TB80$0$0 == 0x009b
                           00009B   682 _TB80	=	0x009b
                           00009C   683 G$REN$0$0 == 0x009c
                           00009C   684 _REN	=	0x009c
                           00009C   685 G$REN0$0$0 == 0x009c
                           00009C   686 _REN0	=	0x009c
                           00009D   687 G$SM2$0$0 == 0x009d
                           00009D   688 _SM2	=	0x009d
                           00009D   689 G$SM20$0$0 == 0x009d
                           00009D   690 _SM20	=	0x009d
                           00009D   691 G$MCE0$0$0 == 0x009d
                           00009D   692 _MCE0	=	0x009d
                           00009E   693 G$SM1$0$0 == 0x009e
                           00009E   694 _SM1	=	0x009e
                           00009E   695 G$SM10$0$0 == 0x009e
                           00009E   696 _SM10	=	0x009e
                           00009F   697 G$SM0$0$0 == 0x009f
                           00009F   698 _SM0	=	0x009f
                           00009F   699 G$SM00$0$0 == 0x009f
                           00009F   700 _SM00	=	0x009f
                           00009F   701 G$S0MODE$0$0 == 0x009f
                           00009F   702 _S0MODE	=	0x009f
                           0000A0   703 G$P2_0$0$0 == 0x00a0
                           0000A0   704 _P2_0	=	0x00a0
                           0000A1   705 G$P2_1$0$0 == 0x00a1
                           0000A1   706 _P2_1	=	0x00a1
                           0000A2   707 G$P2_2$0$0 == 0x00a2
                           0000A2   708 _P2_2	=	0x00a2
                           0000A3   709 G$P2_3$0$0 == 0x00a3
                           0000A3   710 _P2_3	=	0x00a3
                           0000A4   711 G$P2_4$0$0 == 0x00a4
                           0000A4   712 _P2_4	=	0x00a4
                           0000A5   713 G$P2_5$0$0 == 0x00a5
                           0000A5   714 _P2_5	=	0x00a5
                           0000A6   715 G$P2_6$0$0 == 0x00a6
                           0000A6   716 _P2_6	=	0x00a6
                           0000A7   717 G$P2_7$0$0 == 0x00a7
                           0000A7   718 _P2_7	=	0x00a7
                           0000A8   719 G$EX0$0$0 == 0x00a8
                           0000A8   720 _EX0	=	0x00a8
                           0000A9   721 G$ET0$0$0 == 0x00a9
                           0000A9   722 _ET0	=	0x00a9
                           0000AA   723 G$EX1$0$0 == 0x00aa
                           0000AA   724 _EX1	=	0x00aa
                           0000AB   725 G$ET1$0$0 == 0x00ab
                           0000AB   726 _ET1	=	0x00ab
                           0000AC   727 G$ES0$0$0 == 0x00ac
                           0000AC   728 _ES0	=	0x00ac
                           0000AC   729 G$ES$0$0 == 0x00ac
                           0000AC   730 _ES	=	0x00ac
                           0000AD   731 G$ET2$0$0 == 0x00ad
                           0000AD   732 _ET2	=	0x00ad
                           0000AF   733 G$EA$0$0 == 0x00af
                           0000AF   734 _EA	=	0x00af
                           0000B0   735 G$P3_0$0$0 == 0x00b0
                           0000B0   736 _P3_0	=	0x00b0
                           0000B1   737 G$P3_1$0$0 == 0x00b1
                           0000B1   738 _P3_1	=	0x00b1
                           0000B2   739 G$P3_2$0$0 == 0x00b2
                           0000B2   740 _P3_2	=	0x00b2
                           0000B3   741 G$P3_3$0$0 == 0x00b3
                           0000B3   742 _P3_3	=	0x00b3
                           0000B4   743 G$P3_4$0$0 == 0x00b4
                           0000B4   744 _P3_4	=	0x00b4
                           0000B5   745 G$P3_5$0$0 == 0x00b5
                           0000B5   746 _P3_5	=	0x00b5
                           0000B6   747 G$P3_6$0$0 == 0x00b6
                           0000B6   748 _P3_6	=	0x00b6
                           0000B7   749 G$P3_7$0$0 == 0x00b7
                           0000B7   750 _P3_7	=	0x00b7
                           0000B8   751 G$PX0$0$0 == 0x00b8
                           0000B8   752 _PX0	=	0x00b8
                           0000B9   753 G$PT0$0$0 == 0x00b9
                           0000B9   754 _PT0	=	0x00b9
                           0000BA   755 G$PX1$0$0 == 0x00ba
                           0000BA   756 _PX1	=	0x00ba
                           0000BB   757 G$PT1$0$0 == 0x00bb
                           0000BB   758 _PT1	=	0x00bb
                           0000BC   759 G$PS0$0$0 == 0x00bc
                           0000BC   760 _PS0	=	0x00bc
                           0000BC   761 G$PS$0$0 == 0x00bc
                           0000BC   762 _PS	=	0x00bc
                           0000BD   763 G$PT2$0$0 == 0x00bd
                           0000BD   764 _PT2	=	0x00bd
                           0000C0   765 G$SMBTOE$0$0 == 0x00c0
                           0000C0   766 _SMBTOE	=	0x00c0
                           0000C1   767 G$SMBFTE$0$0 == 0x00c1
                           0000C1   768 _SMBFTE	=	0x00c1
                           0000C2   769 G$AA$0$0 == 0x00c2
                           0000C2   770 _AA	=	0x00c2
                           0000C3   771 G$SI$0$0 == 0x00c3
                           0000C3   772 _SI	=	0x00c3
                           0000C4   773 G$STO$0$0 == 0x00c4
                           0000C4   774 _STO	=	0x00c4
                           0000C5   775 G$STA$0$0 == 0x00c5
                           0000C5   776 _STA	=	0x00c5
                           0000C6   777 G$ENSMB$0$0 == 0x00c6
                           0000C6   778 _ENSMB	=	0x00c6
                           0000C7   779 G$BUSY$0$0 == 0x00c7
                           0000C7   780 _BUSY	=	0x00c7
                           0000C8   781 G$CPRL2$0$0 == 0x00c8
                           0000C8   782 _CPRL2	=	0x00c8
                           0000C9   783 G$CT2$0$0 == 0x00c9
                           0000C9   784 _CT2	=	0x00c9
                           0000CA   785 G$TR2$0$0 == 0x00ca
                           0000CA   786 _TR2	=	0x00ca
                           0000CB   787 G$EXEN2$0$0 == 0x00cb
                           0000CB   788 _EXEN2	=	0x00cb
                           0000CC   789 G$TCLK$0$0 == 0x00cc
                           0000CC   790 _TCLK	=	0x00cc
                           0000CD   791 G$RCLK$0$0 == 0x00cd
                           0000CD   792 _RCLK	=	0x00cd
                           0000CE   793 G$EXF2$0$0 == 0x00ce
                           0000CE   794 _EXF2	=	0x00ce
                           0000CF   795 G$TF2$0$0 == 0x00cf
                           0000CF   796 _TF2	=	0x00cf
                           0000D0   797 G$P$0$0 == 0x00d0
                           0000D0   798 _P	=	0x00d0
                           0000D1   799 G$F1$0$0 == 0x00d1
                           0000D1   800 _F1	=	0x00d1
                           0000D2   801 G$OV$0$0 == 0x00d2
                           0000D2   802 _OV	=	0x00d2
                           0000D3   803 G$RS0$0$0 == 0x00d3
                           0000D3   804 _RS0	=	0x00d3
                           0000D4   805 G$RS1$0$0 == 0x00d4
                           0000D4   806 _RS1	=	0x00d4
                           0000D5   807 G$F0$0$0 == 0x00d5
                           0000D5   808 _F0	=	0x00d5
                           0000D6   809 G$AC$0$0 == 0x00d6
                           0000D6   810 _AC	=	0x00d6
                           0000D7   811 G$CY$0$0 == 0x00d7
                           0000D7   812 _CY	=	0x00d7
                           0000D8   813 G$CCF0$0$0 == 0x00d8
                           0000D8   814 _CCF0	=	0x00d8
                           0000D9   815 G$CCF1$0$0 == 0x00d9
                           0000D9   816 _CCF1	=	0x00d9
                           0000DA   817 G$CCF2$0$0 == 0x00da
                           0000DA   818 _CCF2	=	0x00da
                           0000DB   819 G$CCF3$0$0 == 0x00db
                           0000DB   820 _CCF3	=	0x00db
                           0000DC   821 G$CCF4$0$0 == 0x00dc
                           0000DC   822 _CCF4	=	0x00dc
                           0000DE   823 G$CR$0$0 == 0x00de
                           0000DE   824 _CR	=	0x00de
                           0000DF   825 G$CF$0$0 == 0x00df
                           0000DF   826 _CF	=	0x00df
                           0000E8   827 G$ADLJST$0$0 == 0x00e8
                           0000E8   828 _ADLJST	=	0x00e8
                           0000E8   829 G$AD0LJST$0$0 == 0x00e8
                           0000E8   830 _AD0LJST	=	0x00e8
                           0000E9   831 G$ADWINT$0$0 == 0x00e9
                           0000E9   832 _ADWINT	=	0x00e9
                           0000E9   833 G$AD0WINT$0$0 == 0x00e9
                           0000E9   834 _AD0WINT	=	0x00e9
                           0000EA   835 G$ADSTM0$0$0 == 0x00ea
                           0000EA   836 _ADSTM0	=	0x00ea
                           0000EA   837 G$AD0CM0$0$0 == 0x00ea
                           0000EA   838 _AD0CM0	=	0x00ea
                           0000EB   839 G$ADSTM1$0$0 == 0x00eb
                           0000EB   840 _ADSTM1	=	0x00eb
                           0000EB   841 G$AD0CM1$0$0 == 0x00eb
                           0000EB   842 _AD0CM1	=	0x00eb
                           0000EC   843 G$ADBUSY$0$0 == 0x00ec
                           0000EC   844 _ADBUSY	=	0x00ec
                           0000EC   845 G$AD0BUSY$0$0 == 0x00ec
                           0000EC   846 _AD0BUSY	=	0x00ec
                           0000ED   847 G$ADCINT$0$0 == 0x00ed
                           0000ED   848 _ADCINT	=	0x00ed
                           0000ED   849 G$AD0INT$0$0 == 0x00ed
                           0000ED   850 _AD0INT	=	0x00ed
                           0000EE   851 G$ADCTM$0$0 == 0x00ee
                           0000EE   852 _ADCTM	=	0x00ee
                           0000EE   853 G$AD0TM$0$0 == 0x00ee
                           0000EE   854 _AD0TM	=	0x00ee
                           0000EF   855 G$ADCEN$0$0 == 0x00ef
                           0000EF   856 _ADCEN	=	0x00ef
                           0000EF   857 G$AD0EN$0$0 == 0x00ef
                           0000EF   858 _AD0EN	=	0x00ef
                           0000F8   859 G$SPIEN$0$0 == 0x00f8
                           0000F8   860 _SPIEN	=	0x00f8
                           0000F9   861 G$MSTEN$0$0 == 0x00f9
                           0000F9   862 _MSTEN	=	0x00f9
                           0000FA   863 G$SLVSEL$0$0 == 0x00fa
                           0000FA   864 _SLVSEL	=	0x00fa
                           0000FB   865 G$TXBSY$0$0 == 0x00fb
                           0000FB   866 _TXBSY	=	0x00fb
                           0000FC   867 G$RXOVRN$0$0 == 0x00fc
                           0000FC   868 _RXOVRN	=	0x00fc
                           0000FD   869 G$MODF$0$0 == 0x00fd
                           0000FD   870 _MODF	=	0x00fd
                           0000FE   871 G$WCOL$0$0 == 0x00fe
                           0000FE   872 _WCOL	=	0x00fe
                           0000FF   873 G$SPIF$0$0 == 0x00ff
                           0000FF   874 _SPIF	=	0x00ff
                           0000B5   875 G$LED1$0$0 == 0x00b5
                           0000B5   876 _LED1	=	0x00b5
                           0000B6   877 G$LED0$0$0 == 0x00b6
                           0000B6   878 _LED0	=	0x00b6
                           0000B3   879 G$BILED0$0$0 == 0x00b3
                           0000B3   880 _BILED0	=	0x00b3
                           0000B4   881 G$BILED1$0$0 == 0x00b4
                           0000B4   882 _BILED1	=	0x00b4
                           0000B7   883 G$Buzzer$0$0 == 0x00b7
                           0000B7   884 _Buzzer	=	0x00b7
                           0000B0   885 G$PB1$0$0 == 0x00b0
                           0000B0   886 _PB1	=	0x00b0
                           0000B1   887 G$PB2$0$0 == 0x00b1
                           0000B1   888 _PB2	=	0x00b1
                           0000A0   889 G$SS$0$0 == 0x00a0
                           0000A0   890 _SS	=	0x00a0
                                    891 ;--------------------------------------------------------
                                    892 ; overlayable register banks
                                    893 ;--------------------------------------------------------
                                    894 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        895 	.ds 8
                                    896 ;--------------------------------------------------------
                                    897 ; internal ram data
                                    898 ;--------------------------------------------------------
                                    899 	.area DSEG    (DATA)
                           000000   900 G$Counts$0$0==.
      000000                        901 _Counts::
      000000                        902 	.ds 2
                           000002   903 G$Seconds$0$0==.
      000002                        904 _Seconds::
      000002                        905 	.ds 1
                                    906 ;--------------------------------------------------------
                                    907 ; overlayable items in internal ram 
                                    908 ;--------------------------------------------------------
                                    909 	.area	OSEG    (OVR,DATA)
                                    910 	.area	OSEG    (OVR,DATA)
                                    911 ;--------------------------------------------------------
                                    912 ; Stack segment in internal ram 
                                    913 ;--------------------------------------------------------
                                    914 	.area	SSEG
      000000                        915 __start__stack:
      000000                        916 	.ds	1
                                    917 
                                    918 ;--------------------------------------------------------
                                    919 ; indirectly addressable internal ram data
                                    920 ;--------------------------------------------------------
                                    921 	.area ISEG    (DATA)
                                    922 ;--------------------------------------------------------
                                    923 ; absolute internal ram data
                                    924 ;--------------------------------------------------------
                                    925 	.area IABS    (ABS,DATA)
                                    926 	.area IABS    (ABS,DATA)
                                    927 ;--------------------------------------------------------
                                    928 ; bit data
                                    929 ;--------------------------------------------------------
                                    930 	.area BSEG    (BIT)
                                    931 ;--------------------------------------------------------
                                    932 ; paged external ram data
                                    933 ;--------------------------------------------------------
                                    934 	.area PSEG    (PAG,XDATA)
                                    935 ;--------------------------------------------------------
                                    936 ; external ram data
                                    937 ;--------------------------------------------------------
                                    938 	.area XSEG    (XDATA)
                                    939 ;--------------------------------------------------------
                                    940 ; absolute external ram data
                                    941 ;--------------------------------------------------------
                                    942 	.area XABS    (ABS,XDATA)
                                    943 ;--------------------------------------------------------
                                    944 ; external initialized ram data
                                    945 ;--------------------------------------------------------
                                    946 	.area XISEG   (XDATA)
                                    947 	.area HOME    (CODE)
                                    948 	.area GSINIT0 (CODE)
                                    949 	.area GSINIT1 (CODE)
                                    950 	.area GSINIT2 (CODE)
                                    951 	.area GSINIT3 (CODE)
                                    952 	.area GSINIT4 (CODE)
                                    953 	.area GSINIT5 (CODE)
                                    954 	.area GSINIT  (CODE)
                                    955 	.area GSFINAL (CODE)
                                    956 	.area CSEG    (CODE)
                                    957 ;--------------------------------------------------------
                                    958 ; interrupt vector 
                                    959 ;--------------------------------------------------------
                                    960 	.area HOME    (CODE)
      000000                        961 __interrupt_vect:
      000000 02r00r00         [24]  962 	ljmp	__sdcc_gsinit_startup
      000003 32               [24]  963 	reti
      000004                        964 	.ds	7
      00000B 02r00rE8         [24]  965 	ljmp	_Timer0_ISR
                                    966 ;--------------------------------------------------------
                                    967 ; global & static initialisations
                                    968 ;--------------------------------------------------------
                                    969 	.area HOME    (CODE)
                                    970 	.area GSINIT  (CODE)
                                    971 	.area GSFINAL (CODE)
                                    972 	.area GSINIT  (CODE)
                                    973 	.globl __sdcc_gsinit_startup
                                    974 	.globl __sdcc_program_startup
                                    975 	.globl __start__stack
                                    976 	.globl __mcs51_genXINIT
                                    977 	.globl __mcs51_genXRAMCLEAR
                                    978 	.globl __mcs51_genRAMCLEAR
                           000000   979 	C$lab1_2.c$45$1$69 ==.
                                    980 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:45: unsigned int Counts = 0;
      000000 E4               [12]  981 	clr	a
      000001 F5*00            [12]  982 	mov	_Counts,a
      000003 F5*01            [12]  983 	mov	(_Counts + 1),a
                           000005   984 	C$lab1_2.c$46$1$69 ==.
                                    985 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:46: unsigned char Seconds = 0;
                                    986 ;	1-genFromRTrack replaced	mov	_Seconds,#0x00
      000005 F5*02            [12]  987 	mov	_Seconds,a
                                    988 	.area GSFINAL (CODE)
      000000 02r00r0E         [24]  989 	ljmp	__sdcc_program_startup
                                    990 ;--------------------------------------------------------
                                    991 ; Home
                                    992 ;--------------------------------------------------------
                                    993 	.area HOME    (CODE)
                                    994 	.area HOME    (CODE)
      00000E                        995 __sdcc_program_startup:
      00000E 02r00r5C         [24]  996 	ljmp	_main
                                    997 ;	return from main will return to caller
                                    998 ;--------------------------------------------------------
                                    999 ; code
                                   1000 ;--------------------------------------------------------
                                   1001 	.area CSEG    (CODE)
                                   1002 ;------------------------------------------------------------
                                   1003 ;Allocation info for local variables in function 'SYSCLK_Init'
                                   1004 ;------------------------------------------------------------
                                   1005 ;i                         Allocated to registers 
                                   1006 ;------------------------------------------------------------
                           000000  1007 	G$SYSCLK_Init$0$0 ==.
                           000000  1008 	C$c8051_SDCC.h$42$0$0 ==.
                                   1009 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:42: void SYSCLK_Init(void)
                                   1010 ;	-----------------------------------------
                                   1011 ;	 function SYSCLK_Init
                                   1012 ;	-----------------------------------------
      000000                       1013 _SYSCLK_Init:
                           000007  1014 	ar7 = 0x07
                           000006  1015 	ar6 = 0x06
                           000005  1016 	ar5 = 0x05
                           000004  1017 	ar4 = 0x04
                           000003  1018 	ar3 = 0x03
                           000002  1019 	ar2 = 0x02
                           000001  1020 	ar1 = 0x01
                           000000  1021 	ar0 = 0x00
                           000000  1022 	C$c8051_SDCC.h$46$1$2 ==.
                                   1023 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:46: OSCXCN = 0x67;                      // start external oscillator with
      000000 75 B1 67         [24] 1024 	mov	_OSCXCN,#0x67
                           000003  1025 	C$c8051_SDCC.h$49$1$2 ==.
                                   1026 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:49: for (i=0; i < 256; i++);            // wait for oscillator to start
      000003 7E 00            [12] 1027 	mov	r6,#0x00
      000005 7F 01            [12] 1028 	mov	r7,#0x01
      000007                       1029 00107$:
      000007 1E               [12] 1030 	dec	r6
      000008 BE FF 01         [24] 1031 	cjne	r6,#0xFF,00121$
      00000B 1F               [12] 1032 	dec	r7
      00000C                       1033 00121$:
      00000C EE               [12] 1034 	mov	a,r6
      00000D 4F               [12] 1035 	orl	a,r7
      00000E 70 F7            [24] 1036 	jnz	00107$
                           000010  1037 	C$c8051_SDCC.h$51$1$2 ==.
                                   1038 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:51: while (!(OSCXCN & 0x80));           // Wait for crystal osc. to settle
      000010                       1039 00102$:
      000010 E5 B1            [12] 1040 	mov	a,_OSCXCN
      000012 30 E7 FB         [24] 1041 	jnb	acc.7,00102$
                           000015  1042 	C$c8051_SDCC.h$53$1$2 ==.
                                   1043 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:53: OSCICN = 0x88;                      // select external oscillator as SYSCLK
      000015 75 B2 88         [24] 1044 	mov	_OSCICN,#0x88
                           000018  1045 	C$c8051_SDCC.h$56$1$2 ==.
                           000018  1046 	XG$SYSCLK_Init$0$0 ==.
      000018 22               [24] 1047 	ret
                                   1048 ;------------------------------------------------------------
                                   1049 ;Allocation info for local variables in function 'UART0_Init'
                                   1050 ;------------------------------------------------------------
                           000019  1051 	G$UART0_Init$0$0 ==.
                           000019  1052 	C$c8051_SDCC.h$64$1$2 ==.
                                   1053 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:64: void UART0_Init(void)
                                   1054 ;	-----------------------------------------
                                   1055 ;	 function UART0_Init
                                   1056 ;	-----------------------------------------
      000019                       1057 _UART0_Init:
                           000019  1058 	C$c8051_SDCC.h$66$1$4 ==.
                                   1059 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:66: SCON0  = 0x50;                      // SCON0: mode 1, 8-bit UART, enable RX
      000019 75 98 50         [24] 1060 	mov	_SCON0,#0x50
                           00001C  1061 	C$c8051_SDCC.h$67$1$4 ==.
                                   1062 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:67: TMOD   = 0x20;                      // TMOD: timer 1, mode 2, 8-bit reload
      00001C 75 89 20         [24] 1063 	mov	_TMOD,#0x20
                           00001F  1064 	C$c8051_SDCC.h$68$1$4 ==.
                                   1065 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:68: TH1    = -(SYSCLK/BAUDRATE/16);     // set Timer1 reload value for baudrate
      00001F 75 8D DC         [24] 1066 	mov	_TH1,#0xDC
                           000022  1067 	C$c8051_SDCC.h$69$1$4 ==.
                                   1068 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:69: TR1    = 1;                         // start Timer1
      000022 D2 8E            [12] 1069 	setb	_TR1
                           000024  1070 	C$c8051_SDCC.h$70$1$4 ==.
                                   1071 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:70: CKCON |= 0x10;                      // Timer1 uses SYSCLK as time base
      000024 43 8E 10         [24] 1072 	orl	_CKCON,#0x10
                           000027  1073 	C$c8051_SDCC.h$71$1$4 ==.
                                   1074 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:71: PCON  |= 0x80;                      // SMOD00 = 1 (disable baud rate 
      000027 43 87 80         [24] 1075 	orl	_PCON,#0x80
                           00002A  1076 	C$c8051_SDCC.h$73$1$4 ==.
                                   1077 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:73: TI0    = 1;                         // Indicate TX0 ready
      00002A D2 99            [12] 1078 	setb	_TI0
                           00002C  1079 	C$c8051_SDCC.h$74$1$4 ==.
                                   1080 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:74: P0MDOUT |= 0x01;                    // Set TX0 to push/pull
      00002C 43 A4 01         [24] 1081 	orl	_P0MDOUT,#0x01
                           00002F  1082 	C$c8051_SDCC.h$75$1$4 ==.
                           00002F  1083 	XG$UART0_Init$0$0 ==.
      00002F 22               [24] 1084 	ret
                                   1085 ;------------------------------------------------------------
                                   1086 ;Allocation info for local variables in function 'Sys_Init'
                                   1087 ;------------------------------------------------------------
                           000030  1088 	G$Sys_Init$0$0 ==.
                           000030  1089 	C$c8051_SDCC.h$83$1$4 ==.
                                   1090 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:83: void Sys_Init(void)
                                   1091 ;	-----------------------------------------
                                   1092 ;	 function Sys_Init
                                   1093 ;	-----------------------------------------
      000030                       1094 _Sys_Init:
                           000030  1095 	C$c8051_SDCC.h$85$1$6 ==.
                                   1096 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:85: WDTCN = 0xde;			// disable watchdog timer
      000030 75 FF DE         [24] 1097 	mov	_WDTCN,#0xDE
                           000033  1098 	C$c8051_SDCC.h$86$1$6 ==.
                                   1099 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:86: WDTCN = 0xad;
      000033 75 FF AD         [24] 1100 	mov	_WDTCN,#0xAD
                           000036  1101 	C$c8051_SDCC.h$88$1$6 ==.
                                   1102 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:88: SYSCLK_Init();			// initialize oscillator
      000036 12r00r00         [24] 1103 	lcall	_SYSCLK_Init
                           000039  1104 	C$c8051_SDCC.h$89$1$6 ==.
                                   1105 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:89: UART0_Init();			// initialize UART0
      000039 12r00r19         [24] 1106 	lcall	_UART0_Init
                           00003C  1107 	C$c8051_SDCC.h$91$1$6 ==.
                                   1108 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:91: XBR0 |= 0x04;
      00003C 43 E1 04         [24] 1109 	orl	_XBR0,#0x04
                           00003F  1110 	C$c8051_SDCC.h$92$1$6 ==.
                                   1111 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:92: XBR2 |= 0x40;                    	// Enable crossbar and weak pull-ups
      00003F 43 E3 40         [24] 1112 	orl	_XBR2,#0x40
                           000042  1113 	C$c8051_SDCC.h$93$1$6 ==.
                           000042  1114 	XG$Sys_Init$0$0 ==.
      000042 22               [24] 1115 	ret
                                   1116 ;------------------------------------------------------------
                                   1117 ;Allocation info for local variables in function 'putchar'
                                   1118 ;------------------------------------------------------------
                                   1119 ;c                         Allocated to registers r7 
                                   1120 ;------------------------------------------------------------
                           000043  1121 	G$putchar$0$0 ==.
                           000043  1122 	C$c8051_SDCC.h$98$1$6 ==.
                                   1123 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:98: void putchar(char c)
                                   1124 ;	-----------------------------------------
                                   1125 ;	 function putchar
                                   1126 ;	-----------------------------------------
      000043                       1127 _putchar:
      000043 AF 82            [24] 1128 	mov	r7,dpl
                           000045  1129 	C$c8051_SDCC.h$100$1$8 ==.
                                   1130 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:100: while (!TI0); 
      000045                       1131 00101$:
                           000045  1132 	C$c8051_SDCC.h$101$1$8 ==.
                                   1133 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:101: TI0 = 0;
      000045 10 99 02         [24] 1134 	jbc	_TI0,00112$
      000048 80 FB            [24] 1135 	sjmp	00101$
      00004A                       1136 00112$:
                           00004A  1137 	C$c8051_SDCC.h$102$1$8 ==.
                                   1138 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:102: SBUF0 = c;
      00004A 8F 99            [24] 1139 	mov	_SBUF0,r7
                           00004C  1140 	C$c8051_SDCC.h$103$1$8 ==.
                           00004C  1141 	XG$putchar$0$0 ==.
      00004C 22               [24] 1142 	ret
                                   1143 ;------------------------------------------------------------
                                   1144 ;Allocation info for local variables in function 'getchar'
                                   1145 ;------------------------------------------------------------
                                   1146 ;c                         Allocated to registers 
                                   1147 ;------------------------------------------------------------
                           00004D  1148 	G$getchar$0$0 ==.
                           00004D  1149 	C$c8051_SDCC.h$108$1$8 ==.
                                   1150 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:108: char getchar(void)
                                   1151 ;	-----------------------------------------
                                   1152 ;	 function getchar
                                   1153 ;	-----------------------------------------
      00004D                       1154 _getchar:
                           00004D  1155 	C$c8051_SDCC.h$111$1$10 ==.
                                   1156 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:111: while (!RI0);
      00004D                       1157 00101$:
                           00004D  1158 	C$c8051_SDCC.h$112$1$10 ==.
                                   1159 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:112: RI0 = 0;
      00004D 10 98 02         [24] 1160 	jbc	_RI0,00112$
      000050 80 FB            [24] 1161 	sjmp	00101$
      000052                       1162 00112$:
                           000052  1163 	C$c8051_SDCC.h$113$1$10 ==.
                                   1164 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:113: c = SBUF0;
      000052 85 99 82         [24] 1165 	mov	dpl,_SBUF0
                           000055  1166 	C$c8051_SDCC.h$114$1$10 ==.
                                   1167 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:114: putchar(c);                          // echo to terminal
      000055 12r00r43         [24] 1168 	lcall	_putchar
                           000058  1169 	C$c8051_SDCC.h$115$1$10 ==.
                                   1170 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:115: return SBUF0;
      000058 85 99 82         [24] 1171 	mov	dpl,_SBUF0
                           00005B  1172 	C$c8051_SDCC.h$116$1$10 ==.
                           00005B  1173 	XG$getchar$0$0 ==.
      00005B 22               [24] 1174 	ret
                                   1175 ;------------------------------------------------------------
                                   1176 ;Allocation info for local variables in function 'main'
                                   1177 ;------------------------------------------------------------
                           00005C  1178 	G$main$0$0 ==.
                           00005C  1179 	C$lab1_2.c$49$1$10 ==.
                                   1180 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:49: void main(void)
                                   1181 ;	-----------------------------------------
                                   1182 ;	 function main
                                   1183 ;	-----------------------------------------
      00005C                       1184 _main:
                           00005C  1185 	C$lab1_2.c$51$1$49 ==.
                                   1186 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:51: Sys_Init();      // System Initialization
      00005C 12r00r30         [24] 1187 	lcall	_Sys_Init
                           00005F  1188 	C$lab1_2.c$52$1$49 ==.
                                   1189 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:52: Port_Init();     // Initialize ports 2 and 3 
      00005F 12r00rB9         [24] 1190 	lcall	_Port_Init
                           000062  1191 	C$lab1_2.c$53$1$49 ==.
                                   1192 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:53: Interrupt_Init();
      000062 12r00rD1         [24] 1193 	lcall	_Interrupt_Init
                           000065  1194 	C$lab1_2.c$54$1$49 ==.
                                   1195 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:54: Timer_Init();    // Initialize Timer 0 
      000065 12r00rD6         [24] 1196 	lcall	_Timer_Init
                           000068  1197 	C$lab1_2.c$56$1$49 ==.
                                   1198 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:56: putchar(' ');    // the quote fonts may not copy correctly into SiLabs IDE
      000068 75 82 20         [24] 1199 	mov	dpl,#0x20
      00006B 12r00r43         [24] 1200 	lcall	_putchar
                           00006E  1201 	C$lab1_2.c$57$1$49 ==.
                                   1202 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:57: printf("Start\r\n");
      00006E 74r00            [12] 1203 	mov	a,#___str_0
      000070 C0 E0            [24] 1204 	push	acc
      000072 74s00            [12] 1205 	mov	a,#(___str_0 >> 8)
      000074 C0 E0            [24] 1206 	push	acc
      000076 74 80            [12] 1207 	mov	a,#0x80
      000078 C0 E0            [24] 1208 	push	acc
      00007A 12r00r00         [24] 1209 	lcall	_printf
      00007D 15 81            [12] 1210 	dec	sp
      00007F 15 81            [12] 1211 	dec	sp
      000081 15 81            [12] 1212 	dec	sp
                           000083  1213 	C$lab1_2.c$64$2$50 ==.
                                   1214 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:64: while( SS ); // while SS is OFF (high), wait for SS to be set ON
      000083                       1215 00101$:
      000083 20 A0 FD         [24] 1216 	jb	_SS,00101$
                           000086  1217 	C$lab1_2.c$66$2$50 ==.
                                   1218 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:66: TR0 = 1;     // Timer 0 enabled
      000086 D2 8C            [12] 1219 	setb	_TR0
                           000088  1220 	C$lab1_2.c$67$2$50 ==.
                                   1221 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:67: while (PB1); // wait until PB1 is pressed
      000088                       1222 00104$:
      000088 20 B0 FD         [24] 1223 	jb	_PB1,00104$
                           00008B  1224 	C$lab1_2.c$68$2$50 ==.
                                   1225 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:68: Counts = 0;  // set overflow counter to zero
      00008B E4               [12] 1226 	clr	a
      00008C F5*00            [12] 1227 	mov	_Counts,a
      00008E F5*01            [12] 1228 	mov	(_Counts + 1),a
                           000090  1229 	C$lab1_2.c$70$2$50 ==.
                                   1230 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:70: BILED0 = 1;  // while button is down, turn ON the BILED
      000090 D2 B3            [12] 1231 	setb	_BILED0
                           000092  1232 	C$lab1_2.c$71$2$50 ==.
                                   1233 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:71: BILED1 = 0;
      000092 C2 B4            [12] 1234 	clr	_BILED1
                           000094  1235 	C$lab1_2.c$73$2$50 ==.
                                   1236 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:73: while (!PB1);// wait until PB1 is released
      000094                       1237 00107$:
      000094 30 B0 FD         [24] 1238 	jnb	_PB1,00107$
                           000097  1239 	C$lab1_2.c$74$2$50 ==.
                                   1240 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:74: TR0 = 0;     // Timer 0 disabled
      000097 C2 8C            [12] 1241 	clr	_TR0
                           000099  1242 	C$lab1_2.c$76$2$50 ==.
                                   1243 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:76: BILED0 = 0;  // Turn OFF the BILED
      000099 C2 B3            [12] 1244 	clr	_BILED0
                           00009B  1245 	C$lab1_2.c$77$2$50 ==.
                                   1246 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:77: BILED1 = 0;
      00009B C2 B4            [12] 1247 	clr	_BILED1
                           00009D  1248 	C$lab1_2.c$78$2$50 ==.
                                   1249 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:78: printf("\rNumber of Overflows = %d\n", Counts);
      00009D C0*00            [24] 1250 	push	_Counts
      00009F C0*01            [24] 1251 	push	(_Counts + 1)
      0000A1 74r08            [12] 1252 	mov	a,#___str_1
      0000A3 C0 E0            [24] 1253 	push	acc
      0000A5 74s00            [12] 1254 	mov	a,#(___str_1 >> 8)
      0000A7 C0 E0            [24] 1255 	push	acc
      0000A9 74 80            [12] 1256 	mov	a,#0x80
      0000AB C0 E0            [24] 1257 	push	acc
      0000AD 12r00r00         [24] 1258 	lcall	_printf
      0000B0 E5 81            [12] 1259 	mov	a,sp
      0000B2 24 FB            [12] 1260 	add	a,#0xfb
      0000B4 F5 81            [12] 1261 	mov	sp,a
      0000B6 80 CB            [24] 1262 	sjmp	00101$
                           0000B8  1263 	C$lab1_2.c$81$1$49 ==.
                           0000B8  1264 	XG$main$0$0 ==.
      0000B8 22               [24] 1265 	ret
                                   1266 ;------------------------------------------------------------
                                   1267 ;Allocation info for local variables in function 'Port_Init'
                                   1268 ;------------------------------------------------------------
                           0000B9  1269 	G$Port_Init$0$0 ==.
                           0000B9  1270 	C$lab1_2.c$84$1$49 ==.
                                   1271 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:84: void Port_Init(void)
                                   1272 ;	-----------------------------------------
                                   1273 ;	 function Port_Init
                                   1274 ;	-----------------------------------------
      0000B9                       1275 _Port_Init:
                           0000B9  1276 	C$lab1_2.c$87$1$52 ==.
                                   1277 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:87: P3MDOUT |= 0xF8;// set Port 3 output pins to push-pull mode 
      0000B9 43 A7 F8         [24] 1278 	orl	_P3MDOUT,#0xF8
                           0000BC  1279 	C$lab1_2.c$88$1$52 ==.
                                   1280 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:88: P3MDOUT &= 0xFC; // set Port 3 input pins to open drain mode 
      0000BC 53 A7 FC         [24] 1281 	anl	_P3MDOUT,#0xFC
                           0000BF  1282 	C$lab1_2.c$89$1$52 ==.
                                   1283 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:89: P3 |= ~0xFC; // set Port 3 input pins to high impedance state 
      0000BF AF B0            [24] 1284 	mov	r7,_P3
      0000C1 74 03            [12] 1285 	mov	a,#0x03
      0000C3 4F               [12] 1286 	orl	a,r7
      0000C4 F5 B0            [12] 1287 	mov	_P3,a
                           0000C6  1288 	C$lab1_2.c$91$1$52 ==.
                                   1289 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:91: P2MDOUT &= 0xFE; // set Port 2 input pins to push-pull mode
      0000C6 53 A6 FE         [24] 1290 	anl	_P2MDOUT,#0xFE
                           0000C9  1291 	C$lab1_2.c$92$1$52 ==.
                                   1292 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:92: P2 |= ~0xFE; // set Port 2 input pins to high impedance state
      0000C9 AF A0            [24] 1293 	mov	r7,_P2
      0000CB 74 01            [12] 1294 	mov	a,#0x01
      0000CD 4F               [12] 1295 	orl	a,r7
      0000CE F5 A0            [12] 1296 	mov	_P2,a
                           0000D0  1297 	C$lab1_2.c$94$1$52 ==.
                           0000D0  1298 	XG$Port_Init$0$0 ==.
      0000D0 22               [24] 1299 	ret
                                   1300 ;------------------------------------------------------------
                                   1301 ;Allocation info for local variables in function 'Interrupt_Init'
                                   1302 ;------------------------------------------------------------
                           0000D1  1303 	G$Interrupt_Init$0$0 ==.
                           0000D1  1304 	C$lab1_2.c$96$1$52 ==.
                                   1305 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:96: void Interrupt_Init(void)
                                   1306 ;	-----------------------------------------
                                   1307 ;	 function Interrupt_Init
                                   1308 ;	-----------------------------------------
      0000D1                       1309 _Interrupt_Init:
                           0000D1  1310 	C$lab1_2.c$98$1$54 ==.
                                   1311 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:98: ET0 = 1;      // enable Timer0 Interrupt request
      0000D1 D2 A9            [12] 1312 	setb	_ET0
                           0000D3  1313 	C$lab1_2.c$99$1$54 ==.
                                   1314 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:99: EA = 1;       // enable global interrupts
      0000D3 D2 AF            [12] 1315 	setb	_EA
                           0000D5  1316 	C$lab1_2.c$100$1$54 ==.
                           0000D5  1317 	XG$Interrupt_Init$0$0 ==.
      0000D5 22               [24] 1318 	ret
                                   1319 ;------------------------------------------------------------
                                   1320 ;Allocation info for local variables in function 'Timer_Init'
                                   1321 ;------------------------------------------------------------
                           0000D6  1322 	G$Timer_Init$0$0 ==.
                           0000D6  1323 	C$lab1_2.c$102$1$54 ==.
                                   1324 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:102: void Timer_Init(void)
                                   1325 ;	-----------------------------------------
                                   1326 ;	 function Timer_Init
                                   1327 ;	-----------------------------------------
      0000D6                       1328 _Timer_Init:
                           0000D6  1329 	C$lab1_2.c$105$1$56 ==.
                                   1330 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:105: CKCON |= 0x08;  // Timer0 uses SYSCLK as source
      0000D6 43 8E 08         [24] 1331 	orl	_CKCON,#0x08
                           0000D9  1332 	C$lab1_2.c$106$1$56 ==.
                                   1333 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:106: TMOD &= 0xF0;   // clear the 4 least significant bits
      0000D9 53 89 F0         [24] 1334 	anl	_TMOD,#0xF0
                           0000DC  1335 	C$lab1_2.c$107$1$56 ==.
                                   1336 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:107: TMOD |= 0x01;   // Timer0 in mode 1
      0000DC 43 89 01         [24] 1337 	orl	_TMOD,#0x01
                           0000DF  1338 	C$lab1_2.c$108$1$56 ==.
                                   1339 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:108: TR0 = 0;           // Stop Timer0
      0000DF C2 8C            [12] 1340 	clr	_TR0
                           0000E1  1341 	C$lab1_2.c$109$1$56 ==.
                                   1342 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:109: TL0 = 0;           // Clear low byte of register T0
      0000E1 75 8A 00         [24] 1343 	mov	_TL0,#0x00
                           0000E4  1344 	C$lab1_2.c$110$1$56 ==.
                                   1345 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:110: TH0 = 0;           // Clear high byte of register T0
      0000E4 75 8C 00         [24] 1346 	mov	_TH0,#0x00
                           0000E7  1347 	C$lab1_2.c$112$1$56 ==.
                           0000E7  1348 	XG$Timer_Init$0$0 ==.
      0000E7 22               [24] 1349 	ret
                                   1350 ;------------------------------------------------------------
                                   1351 ;Allocation info for local variables in function 'Timer0_ISR'
                                   1352 ;------------------------------------------------------------
                           0000E8  1353 	G$Timer0_ISR$0$0 ==.
                           0000E8  1354 	C$lab1_2.c$116$1$56 ==.
                                   1355 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:116: void Timer0_ISR(void) __interrupt 1
                                   1356 ;	-----------------------------------------
                                   1357 ;	 function Timer0_ISR
                                   1358 ;	-----------------------------------------
      0000E8                       1359 _Timer0_ISR:
      0000E8 C0 E0            [24] 1360 	push	acc
      0000EA C0 D0            [24] 1361 	push	psw
                           0000EC  1362 	C$lab1_2.c$118$1$58 ==.
                                   1363 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:118: Counts++;
      0000EC 05*00            [12] 1364 	inc	_Counts
      0000EE E4               [12] 1365 	clr	a
      0000EF B5*00 02         [24] 1366 	cjne	a,_Counts,00108$
      0000F2 05*01            [12] 1367 	inc	(_Counts + 1)
      0000F4                       1368 00108$:
                           0000F4  1369 	C$lab1_2.c$119$1$58 ==.
                                   1370 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:119: if(Counts == 337)
      0000F4 74 51            [12] 1371 	mov	a,#0x51
      0000F6 B5*00 0C         [24] 1372 	cjne	a,_Counts,00103$
      0000F9 74 01            [12] 1373 	mov	a,#0x01
      0000FB B5*01 07         [24] 1374 	cjne	a,(_Counts + 1),00103$
                           0000FE  1375 	C$lab1_2.c$121$2$59 ==.
                                   1376 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:121: Seconds ++;
      0000FE 05*02            [12] 1377 	inc	_Seconds
                           000100  1378 	C$lab1_2.c$122$2$59 ==.
                                   1379 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:122: Counts = 0;
      000100 E4               [12] 1380 	clr	a
      000101 F5*00            [12] 1381 	mov	_Counts,a
      000103 F5*01            [12] 1382 	mov	(_Counts + 1),a
      000105                       1383 00103$:
      000105 D0 D0            [24] 1384 	pop	psw
      000107 D0 E0            [24] 1385 	pop	acc
                           000109  1386 	C$lab1_2.c$124$1$58 ==.
                           000109  1387 	XG$Timer0_ISR$0$0 ==.
      000109 32               [24] 1388 	reti
                                   1389 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1390 ;	eliminated unneeded push/pop dpl
                                   1391 ;	eliminated unneeded push/pop dph
                                   1392 ;	eliminated unneeded push/pop b
                                   1393 ;------------------------------------------------------------
                                   1394 ;Allocation info for local variables in function 'random'
                                   1395 ;------------------------------------------------------------
                           00010A  1396 	G$random$0$0 ==.
                           00010A  1397 	C$lab1_2.c$133$1$58 ==.
                                   1398 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:133: unsigned char random(void)
                                   1399 ;	-----------------------------------------
                                   1400 ;	 function random
                                   1401 ;	-----------------------------------------
      00010A                       1402 _random:
                           00010A  1403 	C$lab1_2.c$135$1$61 ==.
                                   1404 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:135: return (rand()%2);  // rand returns a random number between 0 and 32767.
      00010A 12r00r00         [24] 1405 	lcall	_rand
      00010D 75*00 02         [24] 1406 	mov	__modsint_PARM_2,#0x02
      000110 75*01 00         [24] 1407 	mov	(__modsint_PARM_2 + 1),#0x00
      000113 12r00r00         [24] 1408 	lcall	__modsint
                           000116  1409 	C$lab1_2.c$139$1$61 ==.
                           000116  1410 	XG$random$0$0 ==.
      000116 22               [24] 1411 	ret
                                   1412 ;------------------------------------------------------------
                                   1413 ;Allocation info for local variables in function 'Button1'
                                   1414 ;------------------------------------------------------------
                           000117  1415 	G$Button1$0$0 ==.
                           000117  1416 	C$lab1_2.c$146$1$61 ==.
                                   1417 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:146: int Button1(void)
                                   1418 ;	-----------------------------------------
                                   1419 ;	 function Button1
                                   1420 ;	-----------------------------------------
      000117                       1421 _Button1:
                           000117  1422 	C$lab1_2.c$148$1$63 ==.
                                   1423 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:148: if (!PB1)
      000117 20 B0 05         [24] 1424 	jb	_PB1,00102$
                           00011A  1425 	C$lab1_2.c$150$2$64 ==.
                                   1426 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:150: return 1;
      00011A 90 00 01         [24] 1427 	mov	dptr,#0x0001
      00011D 80 03            [24] 1428 	sjmp	00104$
      00011F                       1429 00102$:
                           00011F  1430 	C$lab1_2.c$152$1$63 ==.
                                   1431 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:152: else return 0;
      00011F 90 00 00         [24] 1432 	mov	dptr,#0x0000
      000122                       1433 00104$:
                           000122  1434 	C$lab1_2.c$153$1$63 ==.
                           000122  1435 	XG$Button1$0$0 ==.
      000122 22               [24] 1436 	ret
                                   1437 ;------------------------------------------------------------
                                   1438 ;Allocation info for local variables in function 'Button2'
                                   1439 ;------------------------------------------------------------
                           000123  1440 	G$Button2$0$0 ==.
                           000123  1441 	C$lab1_2.c$155$1$63 ==.
                                   1442 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:155: int Button2(void)
                                   1443 ;	-----------------------------------------
                                   1444 ;	 function Button2
                                   1445 ;	-----------------------------------------
      000123                       1446 _Button2:
                           000123  1447 	C$lab1_2.c$157$1$66 ==.
                                   1448 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:157: if (!PB2)
      000123 20 B1 05         [24] 1449 	jb	_PB2,00102$
                           000126  1450 	C$lab1_2.c$159$2$67 ==.
                                   1451 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:159: return 1;
      000126 90 00 01         [24] 1452 	mov	dptr,#0x0001
      000129 80 03            [24] 1453 	sjmp	00104$
      00012B                       1454 00102$:
                           00012B  1455 	C$lab1_2.c$161$1$66 ==.
                                   1456 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:161: else return 0;
      00012B 90 00 00         [24] 1457 	mov	dptr,#0x0000
      00012E                       1458 00104$:
                           00012E  1459 	C$lab1_2.c$162$1$66 ==.
                           00012E  1460 	XG$Button2$0$0 ==.
      00012E 22               [24] 1461 	ret
                                   1462 ;------------------------------------------------------------
                                   1463 ;Allocation info for local variables in function 'Switch'
                                   1464 ;------------------------------------------------------------
                           00012F  1465 	G$Switch$0$0 ==.
                           00012F  1466 	C$lab1_2.c$167$1$66 ==.
                                   1467 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:167: int Switch(void)
                                   1468 ;	-----------------------------------------
                                   1469 ;	 function Switch
                                   1470 ;	-----------------------------------------
      00012F                       1471 _Switch:
                           00012F  1472 	C$lab1_2.c$169$1$69 ==.
                                   1473 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:169: if (!SS) return 1;
      00012F 20 A0 05         [24] 1474 	jb	_SS,00102$
      000132 90 00 01         [24] 1475 	mov	dptr,#0x0001
      000135 80 03            [24] 1476 	sjmp	00104$
      000137                       1477 00102$:
                           000137  1478 	C$lab1_2.c$170$1$69 ==.
                                   1479 ;	C:\Users\rutmas\Documents\LITEC\LITEC\Lab 1\Lab 1_2\lab1-2.c:170: else return 0;
      000137 90 00 00         [24] 1480 	mov	dptr,#0x0000
      00013A                       1481 00104$:
                           00013A  1482 	C$lab1_2.c$171$1$69 ==.
                           00013A  1483 	XG$Switch$0$0 ==.
      00013A 22               [24] 1484 	ret
                                   1485 	.area CSEG    (CODE)
                                   1486 	.area CONST   (CODE)
                           000000  1487 Flab1_2$__str_0$0$0 == .
      000000                       1488 ___str_0:
      000000 53 74 61 72 74        1489 	.ascii "Start"
      000005 0D                    1490 	.db 0x0D
      000006 0A                    1491 	.db 0x0A
      000007 00                    1492 	.db 0x00
                           000008  1493 Flab1_2$__str_1$0$0 == .
      000008                       1494 ___str_1:
      000008 0D                    1495 	.db 0x0D
      000009 4E 75 6D 62 65 72 20  1496 	.ascii "Number of Overflows = %d"
             6F 66 20 4F 76 65 72
             66 6C 6F 77 73 20 3D
             20 25 64
      000021 0A                    1497 	.db 0x0A
      000022 00                    1498 	.db 0x00
                                   1499 	.area XINIT   (CODE)
                                   1500 	.area CABS    (ABS,CODE)
